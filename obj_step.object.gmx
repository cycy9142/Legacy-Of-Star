<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///변수 설정


//게임속도 
g.game_spd = 1;
g.game_spd_val = 1;


//중력값 (1초 기준)
g.grav_lev = 20;


hp_inst = 0;


inven_open = false;
inven_open_check = false;
inven_open_fade = 0;

inven_scroll = 0;
inven_scroll_val = 0;
inven_scroll_max = 0;

inven_cell = 60;
inven_surf = 0;
inven_list_surf = 0;

list_item = ds_list_create();

ds_list_add(list_item, ds_list_create());
inven_add_value(list_item, 0, spr_inven_005);
inven_add_value(list_item, 0, "sample01");

ds_list_add(list_item, ds_list_create());
inven_add_value(list_item, 1, spr_inven_005);
inven_add_value(list_item, 1, "sample02");

ds_list_add(list_item, ds_list_create());
inven_add_value(list_item, 2, spr_inven_005);
inven_add_value(list_item, 2, "한글도 실험");

ds_list_add(list_item, ds_list_create());
inven_add_value(list_item, 3, spr_inven_005);
inven_add_value(list_item, 3, "테스트");

ds_list_add(list_item, ds_list_create());
inven_add_value(list_item, 4, spr_inven_005);
inven_add_value(list_item, 4, "앗! 힣! 헼! 훜!");

ds_list_add(list_item, ds_list_create());
inven_add_value(list_item, 5, spr_inven_005);
inven_add_value(list_item, 5, "abcd가나다라");

ds_list_add(list_item, ds_list_create());
inven_add_value(list_item, 6, spr_inven_005);
inven_add_value(list_item, 6, "마지막");

//image number
//item name
//...

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///주인공 소환

if( room_get_name(room) == "Ruin" )
{
    g.respawn_x = 900;
    g.respawn_y = 200;
}
else
{
    g.respawn_x = 500;
    g.respawn_y = 450;
}
instance_create(g.respawn_x, g.respawn_y, obj_joe);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///인벤토리 관련

if( keyboard_check_pressed(ord('I')) )
{
    if( inven_open )
    {
        if( inven_open_fade &gt;= 1) inven_open = false;
    }
    else
    {
        if( inven_open_fade &lt;= 0) inven_open = true;
    }
}

if( inven_open )
{
    if( mouse_wheel_up() ) inven_scroll -= inven_cell;
    if( mouse_wheel_down() ) inven_scroll += inven_cell;
    
    inven_scroll = median(0, inven_scroll, inven_scroll_max);
    
    inven_scroll_val += (inven_scroll - inven_scroll_val) * 0.1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///게임 속도 관련

temp_spd_val = sign(g.game_spd - g.game_spd_val) * 0.05;
g.game_spd_val += temp_spd_val;
if( abs(g.game_spd - g.game_spd_val) &lt; 0.05 ) g.game_spd_val = g.game_spd;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///치트 
if( keyboard_check_pressed(vk_pageup) ) g.game_spd += 0.05;
if( keyboard_check_pressed(vk_pagedown) ) g.game_spd -= 0.05;
if( keyboard_check_pressed(vk_home) ) room_goto_next();
if( keyboard_check_pressed(ord('1')) ) 
{
    inst = instance_find(obj_hero, 0);
    instance_create(inst.x, inst.y - 50, obj_joe);
    with(inst)
    {
        instance_destroy();
    }
}
if( keyboard_check_pressed(ord('2')) ) 
{
    inst = instance_find(obj_hero, 0);
    instance_create(inst.x, inst.y - 50, obj_weimei);
    with(inst)
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i=0; i&lt;ds_list_size(list_item); i+=1)
{
    if( ds_exists(ds_list_destroy(ds_list_find_value(list_item, i)), ds_type_list) )
        ds_list_destroy(ds_list_find_value(list_item, i));
};
ds_list_destroy(list_item);

if( surface_exists(inven_surf) ) surface_free(inven_surf);
if( surface_exists(inven_list_surf) ) surface_free(inven_list_surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HP UI 관련

if( instance_exists(hp_inst) )
{
    temp_y = ((hp_inst.hero_hp / hp_inst.hero_hp_max) * 125);
    draw_sprite( spr_hp_001, 0, view_xview[0]+20, view_yview[0]+20 );
    draw_sprite_part( spr_hp_002, 0, 0, 125 - temp_y, 145, temp_y, 
                      view_xview[0]+20, view_yview[0]+20+(125-temp_y) );
    draw_sprite( spr_hp_003, 0, view_xview[0]+20, view_yview[0]+20 );
    
}
else
{
    draw_sprite( spr_hp_001, 0, view_xview[0]+20, view_yview[0]+20 );
    draw_sprite( spr_hp_003, 0, view_xview[0]+20, view_yview[0]+20 );
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 총알 표시

if( instance_exists(hp_inst) )
{
    temp_x = view_xview[0] + 85;
    temp_y = view_yview[0] + view_hview[0] - 85;
    draw_sprite(spr_bullet_003, 0, temp_x, temp_y);
    draw_sprite(spr_bullet_002, 0, temp_x, temp_y);
    if( hp_inst.shot_reload_delay_val == -10 )
    {
        draw_sprite_pie( spr_bullet_004, 0, temp_x, temp_y, 
                         90, (90+360*(hp_inst.shot_bullet/hp_inst.shot_bullet_max)),
                         c_white, 1);
    }
    else
    {
        draw_sprite_pie( spr_bullet_004, 0, temp_x, temp_y, 90, 
                         (90+360*(1-(hp_inst.shot_reload_delay_val/hp_inst.shot_reload_delay))),
                         c_white, 1);
        draw_sprite(spr_bullet_001, 0, temp_x, temp_y);
    }
}
else
{
    draw_sprite(spr_bullet_003, 0, temp_x, temp_y);
    draw_sprite(spr_bullet_002, 0, temp_x, temp_y);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///인벤토리 관련

if( inven_open )
{
    if( !inven_open_check )
    {
        inven_open_check = true;
        inven_surf = surface_create(1100, 500);
        inven_list_surf = surface_create(470, 400);
        
        g.game_spd = 0;
        
        inven_scroll = 0;
        inven_scroll_val = 0;
        inven_scroll_max = max(0, (ds_list_size(list_item) * 60) - 340);
    }
    
    if( inven_open_fade &lt; 1 ) inven_open_fade += 0.05;
    
    
    surface_set_target(inven_list_surf);
    
    draw_clear_alpha(c_black, 0);
        
    draw_set_halign(fa_left);
    draw_set_valign(fa_middle);
    draw_set_colour(c_white);
    draw_set_font(font_nanoom);
    for (i=0; i&lt;ds_list_size(list_item); i+=1)
    {
        temp_y = (inven_cell * i) - inven_scroll_val + 30;
        draw_sprite(spr_inven_005, 0, 0, temp_y);
        draw_text(60, temp_y + (inven_cell * 0.5), inven_get_value(list_item, i, 1));
    };
    
    draw_set_blend_mode_ext(bm_zero, bm_src_alpha);
    
    draw_sprite(spr_inven_000, 0, 0, -2);
    draw_sprite(spr_inven_000, 1, 0, 372);
    
    draw_set_blend_mode(bm_normal);
    
    surface_reset_target();
    
    
    surface_set_target(inven_surf);
    
    draw_clear_alpha(c_black, 0);
    
    draw_sprite(spr_status_001, 0, 0, 0);
    
    draw_sprite(spr_inven_001, 0, 584, 13);
    draw_sprite(spr_inven_002, 0, 550, 0);
    
    draw_surface(inven_list_surf, 620, 30);
    
    surface_reset_target();
    
    draw_set_alpha(inven_open_fade);
    draw_surface(inven_surf, view_xview[0] + view_wview[0]/2 - 550,
                             view_yview[0] + view_hview[0]/2 - 220);
    draw_set_alpha(1);
}
else
{
    
    if( inven_open_check )
    {
        g.game_spd = 1;
        
        if( inven_open_fade &gt; 0 ) 
        {
            inven_open_fade -= 0.05;
            draw_set_alpha(inven_open_fade);
            draw_surface(inven_surf, view_xview[0] + view_wview[0]/2 - 550,
                                     view_yview[0] + view_hview[0]/2 - 220);
            draw_set_alpha(1);
        } 
        else
        {
            inven_open_check = false;
            
            if( surface_exists(inven_surf) ) surface_free(inven_surf);
            if( surface_exists(inven_list_surf) ) surface_free(inven_list_surf);
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///스킬창 표시

if( instance_exists(hp_inst) )
{
    switch (object_get_name(hp_inst.object_index))
    {
        case "obj_joe":
             draw_sprite(spr_joe_skill_01, 0, view_xview[0] + 170, view_yview[0] + 45);
             draw_sprite(spr_joe_skill_02, 0, view_xview[0] + 245, view_yview[0] + 45);
             draw_sprite(spr_joe_skill_03, 0, view_xview[0] + 320, view_yview[0] + 45);
             draw_sprite(spr_joe_skill_04, 0, view_xview[0] + 395, view_yview[0] + 45);
             break;
        case "obj_weimei":
             draw_sprite(spr_weimei_skill_01, 0, view_xview[0] + 170, view_yview[0] + 45);
             draw_sprite(spr_weimei_skill_02, 0, view_xview[0] + 245, view_yview[0] + 45);
             draw_sprite(spr_weimei_skill_03, 0, view_xview[0] + 320, view_yview[0] + 45);
             draw_sprite(spr_weimei_skill_04, 0, view_xview[0] + 395, view_yview[0] + 45);
             break;
        default: 
    }
    
    if( hp_inst.skill_a_cool_val &gt; 0 )  draw_sprite_pie( spr_skill_cool, 0, 
                                                         view_xview[0] + 170+35, view_yview[0] + 80,
                                                         90, 90 + 360*(hp_inst.skill_a_cool_val/hp_inst.skill_a_cool_time),
                                                         c_white, 1);
    if( hp_inst.skill_s_cool_val &gt; 0 )  draw_sprite_pie( spr_skill_cool, 0, 
                                                         view_xview[0] + 245+35, view_yview[0] + 80,
                                                         90, 90 + 360*(hp_inst.skill_s_cool_val/hp_inst.skill_s_cool_time),
                                                         c_white, 1);
    if( hp_inst.skill_d_cool_val &gt; 0 )  draw_sprite_pie( spr_skill_cool, 0, 
                                                         view_xview[0] + 320+35, view_yview[0] + 80,
                                                         90, 90 + 360*(hp_inst.skill_d_cool_val/hp_inst.skill_d_cool_time),
                                                         c_white, 1);
    if( hp_inst.skill_f_cool_val &gt; 0 )  draw_sprite_pie( spr_skill_cool, 0, 
                                                         view_xview[0] + 395+35, view_yview[0] + 80,
                                                         90, 90 + 360*(hp_inst.skill_f_cool_val/hp_inst.skill_f_cool_time),
                                                         c_white, 1);
    
    if( hp_inst.skill_a_on ) draw_sprite(spr_skill_activate, 0, view_xview[0] + 170, view_yview[0] + 45);
    if( hp_inst.skill_s_on ) draw_sprite(spr_skill_activate, 0, view_xview[0] + 245, view_yview[0] + 45);
    if( hp_inst.skill_d_on ) draw_sprite(spr_skill_activate, 0, view_xview[0] + 320, view_yview[0] + 45);
    if( hp_inst.skill_f_on ) draw_sprite(spr_skill_activate, 0, view_xview[0] + 395, view_yview[0] + 45);

    draw_sprite(spr_skill_frame, 0, view_xview[0] + 170, view_yview[0] + 45);
    draw_sprite(spr_skill_frame, 0, view_xview[0] + 245, view_yview[0] + 45);
    draw_sprite(spr_skill_frame, 0, view_xview[0] + 320, view_yview[0] + 45);
    draw_sprite(spr_skill_frame, 0, view_xview[0] + 395, view_yview[0] + 45);
}
else
{
    draw_sprite(spr_skill_frame, 0, view_xview[0] + 170, view_yview[0] + 45);
    draw_sprite(spr_skill_frame, 0, view_xview[0] + 245, view_yview[0] + 45);
    draw_sprite(spr_skill_frame, 0, view_xview[0] + 320, view_yview[0] + 45);
    draw_sprite(spr_skill_frame, 0, view_xview[0] + 395, view_yview[0] + 45);
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///치트

draw_set_font(font_nanoom);
draw_set_colour(c_white);
draw_text(mouse_x + 50, mouse_y, g.game_spd_val);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
