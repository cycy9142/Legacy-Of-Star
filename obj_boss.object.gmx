<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>spr_boss_idle</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///기본 능력치 관련 

enemy_hp_max = 5000;
enemy_hp = 5000;

enemy_dmg = 30;

enemy_knock = 8;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///이동/공격 관련 변수 선언
image_speed = 0;

//패턴에 의해 움직임
//마찰력 없음 
move_h_val = 0;

//점프를 위해 사용
move_v_spd = 0;
move_jump_val = 5;

//적 감지 범위
det_range_front = 300;
det_range_height = 50;
det_disturb = 0;

duration = 0;
intv = 0;
intv_check = 0;
attack_kind = 0;

attack1_check = 0;

attack2_1_duration = 200;
attack2_1_intv = 30;
attack2_1_degree = 40;

attack2_2_duration = 250;
attack2_2_intv = 50;
attack2_2_degree = 60;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///기타 연산 

hp_view_time = 80;
hp_view_val = 0;

hit_dmg = 0;

hurt_time = 20;
hurt_val = 0;

randomize();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///이동 / 공격
//image_speed = g.game_spd_val;

if( enemy_hp &lt;= 0 )
{
    inst = instance_create(x, y, obj_boss_die);
    inst.move_h_spd = move_h_val;
    inst.move_v_spd = move_v_spd;
    inst.image_xscale = image_xscale;
    instance_destroy();
}
if( sprite_index == spr_boss_idle )
{
    move_h_val = 0;
}
else if( sprite_index == spr_boss_attack1_1 )
{
    move_h_val = 3;
}
else if( sprite_index == spr_boss_back1_1 )
{
    move_h_val = -3;
}
else if( sprite_index == spr_boss_attack1_2 )
{
    move_h_val = 2;
    if( attack1_check == 0 )
    {
        if( image_index &gt; 27 )
        {
            attack1_check += 1;
            inst = instance_create(x+200, y, obj_boss_attack2);
            inst.h_spd = move_h_val;
            inst.v_spd = -80;
            inst.duration = 7;
        }
    }
    else if( attack1_check == 1 )
    {
        if( image_index &gt; 61 )
        {
            attack1_check += 1;
            inst = instance_create(x+200, y, obj_boss_attack2);
            inst.h_spd = move_h_val;
            inst.v_spd = 170;
            inst.duration = 4;
        }
    }
    else if( attack1_check == 2 )
    {
        if( image_index &gt; 65 )
        {
            attack1_check += 1;
            instance_create(x+400, y, obj_boss_exp_spawn);
        }
    }
}
else if( sprite_index == spr_boss_attack2 )
{
    move_h_val = 2;
}
else if( sprite_index == spr_boss_back2 )
{
    move_h_val = -2;
}
else if( sprite_index == spr_boss_attack2_shoot )
{
    move_h_val = 0;
    if( duration &gt; 0 ) 
    {
        duration -= g.game_spd_val;
        intv += g.game_spd_val;
        if(intv &gt; intv_check)
        {
            if( attack_kind == 1 )
            {
                intv_check += attack2_1_intv;
                
                if( instance_exists( obj_hero ) )
                {
                    hero_inst = instance_nearest(x, y, obj_hero);
                    ball_dir = point_direction(x + 294, y - 197, hero_inst.x, hero_inst.y-90);
                    inst = instance_create(x + 294, y - 197, obj_boss_ball1);
                    inst.direction = ball_dir;
                    inst = instance_create(x + 294, y - 197, obj_boss_ball1);
                    inst.direction = ball_dir + attack2_1_degree;
                    inst = instance_create(x + 294, y - 197, obj_boss_ball1);
                    inst.direction = ball_dir - attack2_1_degree;
                    
                }
            }    
            else 
            {
                intv_check += attack2_2_intv;
                
                if( instance_exists( obj_hero ) )
                {
                    hero_inst = instance_nearest(x, y, obj_hero);
                    ball_dir = point_direction(x + 294, y - 197, hero_inst.x, hero_inst.y-90);
                    inst = instance_create(x + 294, y - 197, obj_boss_ball2);
                    inst.direction = ball_dir + random_range(-attack2_2_degree, attack2_2_degree);
                    
                }
            }
            
        }
    }
    else
    {
        sprite_index = spr_boss_back2;
    }
}

if( collision_rectangle( bbox_left + move_h_val * g.game_spd_val, y-50,
                         x + move_h_val * g.game_spd_val, y, obj_col_parant, false, true) == noone ) 
    x += move_h_val * g.game_spd_val;

move_v_spd += g.grav_lev / room_speed * g.game_spd_val * 0.7;

if( place_free(x, y+move_v_spd) ) 
{
    y += move_v_spd * g.game_spd_val;
}
else
{
    move_contact_solid(270, move_v_spd);
    move_v_spd = 0;
}


temp_col = collision_rectangle( bbox_left, bbox_top, bbox_right, bbox_bottom, 
                                obj_hero, true, true )
if( temp_col != noone )
{
    temp_col.hit_dmg = enemy_dmg;
    temp_col.knock_power = enemy_knock * sign(image_xscale);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if( image_index &lt; sprite_get_number(sprite_index)-1 )
{
    image_index += g.game_spd_val;
}
else
{
    switch (sprite_index)
    {
        case spr_boss_attack1_1: 
             if( random(100) &lt; 70 ) 
             {
                sprite_index = spr_boss_attack1_2;
                attack1_check = 0;
             }
             image_index = 0;
             break;
        case spr_boss_attack1_2: 
             sprite_index = spr_boss_back1_2;
             image_index = 0;
             move_h_val = -6;
             move_v_spd = -5;
             break;
        case spr_boss_back1_1:
             if( x &lt; 300 ) 
             {
                sprite_index = spr_boss_idle;
                image_index = 0;
             }
             else
             {
                sprite_index = spr_boss_back1_1;
                image_index = 0;
             }
             break;
        case spr_boss_back1_2:
             if( !place_free(x, y+1) )
             {
                 if( x &lt; 300 ) 
                 {
                    sprite_index = spr_boss_idle;
                    image_index = 0;
                 }
                 else
                 {
                    sprite_index = spr_boss_back1_1;
                    image_index = 0;
                 }
             }
             break;
        case spr_boss_back2:
             sprite_index = spr_boss_idle;
             image_index = 0;
             break;
        case spr_boss_attack2:
             sprite_index = spr_boss_attack2_shoot;
             image_index = 0;
             attack_kind = irandom_range(1, 2);
             intv = 0;
             intv_check = 0;
             if( attack_kind == 1 )
             {
                duration = attack2_1_duration;
             }
             else
             {
                duration = attack2_2_duration;
             }
             break;
        case spr_boss_idle:
            temp_ran = random(100);
            if(temp_ran &lt; 20)
            {
                sprite_index = spr_boss_attack1_1;
            }
            else if(temp_ran &lt; 50)
            {
                sprite_index = spr_boss_attack1_2;
                attack1_check = 0;
            }
            else if(temp_ran &lt; 85)
            {
                sprite_index = spr_boss_attack2;
            }
            
            image_index = 0;
            break;
        default: 
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_sprite_ext( sprite_index, image_index, x, y, image_xscale, 1, 0, 
                 make_colour_hsv(0, 255 * (hurt_val/hurt_time), 255), 1 );

if( hurt_val &gt; 0 ) hurt_val -= g.game_spd;
    
if( hit_dmg &gt; 0 )
{
    enemy_hp -= hit_dmg;
    hit_dmg = 0;
    hp_view_val = hp_view_time;
    hurt_val = hurt_time;
}

if( hp_view_val &gt; 0 )
{
    hp_view_val -= g.game_spd_val;
    draw_sprite( spr_enemyhp_001, 0, x - 60, bbox_top - 60 );
    draw_sprite_part( spr_enemyhp_002, 0, 0, 0, 
                      (enemy_hp / enemy_hp_max) * 112, 38, x - 54, bbox_top - 58 );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
